import Head from "next/head";
import styles from "../styles/Home.module.css";
import {
	signInWithGooglePopup,
	signOutUser,
	createUserDocumentFromAuth,
} from "../utils/firebase.utils";
import { useEffect, useState } from "react";
import Navbar from "../src/components/Navbar";
import { useRouter } from "next/router";
import AuthenticatedContent from "../src/containers/AuthenticatedContent";
import FollowedCarousel from "../src/components/FollowedCarousel/FollowedCarousel";

export default function Home() {
	const [isAuthenticated, setIsAuthenticated] = useState(false);
	const [horizontalMovies, setHorizontalMovies] = useState([]);
	const [verticalMovies, setVerticalMovies] = useState([]);

	const router = useRouter();

	useEffect(() => {
		fetchData();
		checkAuthenticationStatus();
	}, [router]);

	const checkAuthenticationStatus = () => {
		if (localStorage.getItem("userId") === null) {
			return setIsAuthenticated(false);
		}
		return setIsAuthenticated(true);
	};

	const loginHandler = async () => {
		console.log("Login");
		const { user } = await signInWithGooglePopup();
		await createUserDocumentFromAuth(user);
		localStorage.setItem("userId", user.uid);
		setIsAuthenticated(true);
	};

	const logoutHandler = () => {
		console.log("Logout");
		signOutUser();
		setIsAuthenticated(false);
	};

	const fetchData = async () => {
		const response = await fetch(
			"https://edge.api.brightcove.com/playback/v1/accounts/5076297042001/playlists/ref:hackathon",
			{
				headers: {
					Accept:
						"Accept: application/json;pk=BCpkADawqM0U-1PMKODQJ8iEA4GfRjA9YdRjcgzkt0YoZ9vjpdyz2yb4RpFGxR581IzfRHdk4V-dTkDjC3B1TBy5LCn-UVZXpRryyb8YjU8jlfsXfKv27CXhyt_ZtE12m4EeqjGaL99pzkJ5",
				},
			}
		);
		const responseData = await response.json();
		setHorizontalMovies(filterHorizontalMovies(responseData.videos));
		setVerticalMovies(filterVerticalMovies(responseData.videos));
	};

	const filterHorizontalMovies = (movies) => {
		const excludedMovies = [
			"Home Alone",
			"Cold War",
			"A Star Is Born",
			"Interstellar",
			"Coco",
			"Blade Runner",
			"Dunkirk",
			"Colette",
		];

		return movies.filter((movie) => {
			return !excludedMovies.includes(movie.name);
		});
	};

	const filterVerticalMovies = (movies) => {
		const includedMovies = [
			"A Star Is Born",
			"Interstellar",
			"Coco",
			"Blade Runner",
			"Dunkirk",
			"Colette",
		];

		return movies.filter((movie) => {
			return includedMovies.includes(movie.name);
		});
	};

	return (
		<div className={styles.container}>
			<Head>
				<title>CineTrak</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Navbar
				onLogout={logoutHandler}
				onLogin={loginHandler}
				isAuthenticated={isAuthenticated}
			/>
			<FollowedCarousel />
			{isAuthenticated && (
				<AuthenticatedContent
					horizontalMovies={horizontalMovies}
					verticalMovies={verticalMovies}
				/>
			)}
		</div>
	);
}
