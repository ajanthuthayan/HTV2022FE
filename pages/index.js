import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
// import PreviewCard from "../src/components/PreviewCard";
import Navbar from "../src/components/Navbar";

export default function Home() {
	const [data, setData] = useState([]);
	const [videos, setVideos] = useState([]);
	const [horizontalMovies, setHorizontalMovies] = useState([]);
	const [verticalMovies, setVerticalMovies] = useState([]);

	useEffect(() => {
		fetchData();
	}, []);

	const fetchData = async () => {
		const response = await fetch(
			"https://edge.api.brightcove.com/playback/v1/accounts/5076297042001/playlists/ref:hackathon",
			{
				headers: {
					Accept:
						"Accept: application/json;pk=BCpkADawqM0U-1PMKODQJ8iEA4GfRjA9YdRjcgzkt0YoZ9vjpdyz2yb4RpFGxR581IzfRHdk4V-dTkDjC3B1TBy5LCn-UVZXpRryyb8YjU8jlfsXfKv27CXhyt_ZtE12m4EeqjGaL99pzkJ5",
				},
			}
		);
		const responseData = await response.json();
		setData(responseData);
		setVideos(responseData.videos);
		setHorizontalMovies(filterHorizontalMovies(responseData.videos));
		setVerticalMovies(filterVerticalMovies(responseData.videos));
	};

	const filterHorizontalMovies = (movies) => {
		const excludedMovies = [
			"Home Alone",
			"Cold War",
			"A Star Is Born",
			"Interstellar",
			"Coco",
			"Blade Runner",
			"Dunkirk",
			"Colette",
		];

		return movies.filter((movie) => {
			return !excludedMovies.includes(movie.name);
		});
	};

	const filterVerticalMovies = (movies) => {
		const includedMovies = [
			"A Star Is Born",
			"Interstellar",
			"Coco",
			"Blade Runner",
			"Dunkirk",
			"Colette",
		];

		return movies.filter((movie) => {
			return includedMovies.includes(movie.name);
		});
	};

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Navbar />
			<main className={styles.main}>
				<h1 className={styles.title}>Home</h1>
				<div className={styles.grid}>
					{/* {horizontalMovies?.map((video, index) => {
						return <PreviewCard key={index} video={video} />;
					})}
					{verticalMovies?.map((video, index) => {
						return <PreviewCard key={index} video={video} />;
					})} */}
				</div>
			</main>
		</div>
	);
}
